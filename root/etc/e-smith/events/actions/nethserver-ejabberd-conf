#!/usr/bin/perl
#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use NethServer::Service;
use NethServer::Directory;
use esmith::AccountsDB;
use esmith::event;
use User::pwent;


my $ldap = NethServer::Directory::connect();
my $internalSuffix = NethServer::Directory::getInternalSuffix();
my $exitCode = 0;


#
# Adjust LDAP ACLs to allow dovecot read on any field through ldapi:// socket.
#
my $ldapAccessDirective = 'by dn.exact="cn=ejabberd,'.$internalSuffix.'" read';

NethServer::Directory::addAccessDirective($ldapAccessDirective, '*');


# Create ejabberd ldap user

{ # BEGIN LDAP

    my $password = NethServer::Directory::getUserPassword('ejabberd', 0);

    my @entries = (
        [ 'cn=ejabberd,' . $internalSuffix,
          attrs => [
              objectClass => ['device', 'simpleSecurityObject'],
              cn => 'ejabberd',
              userPassword => NethServer::Directory::getUserPassword('ejabberd', 1),
              description => 'Ejabberd management account'
          ] 
        ]
        );

    foreach(@entries) {
        my $message = $ldap->merge(@{$_});
        if($message->is_error()) {
            warn 'error merging ' . $_[0];
            $exitCode ++;
        }
    }

} # END LDAP



# Add ejabberd service 

NethServer::Service::manage_add('nethserver-ejabberd', 'ejabberd');


# Add ejabber admin group: jabberadmins

my $group = 'jabberadmins';

my $grent = getgrnam($group);
if( ! $grent) {
    $exitCode += event_signal('group-create', $group);
}

exit($exitCode);

